1) why i create endpoints?
- serverActions don’t handle external network calls(send email).
- i have heavy processing

.....

2) redirect and nextResponse.redirect?
-redirect() → Only works in Server Components or Server Actions

-NextResponse.redirect() → Only works in middleware.
                        → Middleware runs before Next.js rendering, at the Edge (closer to CDN).



3) suspense → If the children have already been rendered on the server and sent to the client, they don’t suspend anymore — so the fallback never appears.




Workflow Execution Project – Summary
Goal:
Run a multi-step workflow when executeWorkflow() is called from useFlowStore, performing:

Read File (txt, pdf, docx, doc)

Summarize with LLM

Send Email

Generate Report (CSV, PDF, DOCX)

Current State
executeWorkflow is currently client-only and simulates execution with setTimeout.

UI (Analyze & Load components) is wired to the Zustand store and updates execution progress.

No real server-side processing is implemented yet.

Decisions Made
Heavy actions (file read, LLM calls, email, report generation) must run on the server for security and performance.

We'll use an API Route instead of a Server Action to allow future flexibility (can be called internally or externally).

The client will call this API step-by-step to update the UI live.

Next Steps
Create API endpoint /api/workflow with sequential actions:

Parse file → Summarize → Email → Report.

Update executeWorkflow to call the API and update progress after each step.

Add API keys securely in .env:

LLM API key (full access to completion/summarization endpoints).

Email API key (send-only permissions).

(Optional) Storage API key (limited to workflow file bucket).

Ensure API keys are never exposed to the frontend.

Implement file parsing using:

.txt: fs.readFile

.pdf: pdf-parse

.docx: mammoth

.doc: LibreOffice conversion or officeparser library.

Implement CSV/PDF/DOCX report generation on the server.

What We’ll Do Next Session
Build /api/workflow with real logic.

Integrate with Zustand so progress updates in real-time.

Test with a sample file and dummy LLM + email provider.

